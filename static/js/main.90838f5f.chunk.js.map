{"version":3,"sources":["components/CourseForm.js","components/CourseList.js","App.js","reportWebVitals.js","index.js"],"names":["CourseForm","props","onSubmit","addCourse","type","value","current","onChange","updateCourse","placeholder","CourseList","state","isEdit","renderCourse","details","name","onClick","toggleState","deleteCourse","index","setState","updateCourseItem","e","preventDefault","input","editCourse","renderUpdateForm","ref","v","defaultValue","this","Component","App","courses","target","push","splice","courseList","map","course","className","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAWeA,EATI,SAACC,GAChB,OACI,uBAAMC,SAAUD,EAAME,UAAtB,UACI,uBAAOC,KAAK,OAAOC,MAAOJ,EAAMK,QAASC,SAAUN,EAAMO,aAAcC,YAAY,sBACnF,oDCmDGC,E,4MArDXC,MAAO,CACHC,QAAS,G,EAGbC,aAAe,WACX,OACI,+BACI,qCAAQ,EAAKZ,MAAMa,QAAQC,QAC3B,wBAAQC,QAAS,kBAAK,EAAKC,eAA3B,yBACA,wBAAQD,QAAS,kBAAK,EAAKf,MAAMiB,aAAa,EAAKjB,MAAMkB,QAAzD,+B,EAOZF,YAAc,WAAO,IACZL,EAAU,EAAKD,MAAfC,OACL,EAAKQ,SAAS,CACVR,QAASA,K,EAIjBS,iBAAkB,SAACC,GACfA,EAAEC,iBACE,EAAKC,MAAMnB,OACX,EAAKJ,MAAMwB,WAAW,EAAKxB,MAAMkB,MAAO,EAAKK,MAAMnB,OACnD,EAAKY,eAEL,EAAKO,MAAMf,YAAc,mC,EAKjCiB,iBAAmB,WACf,OACI,uBAAMxB,SAAW,EAAKmB,iBAAtB,UACI,uBAAOjB,KAAK,OAAOuB,IAAM,SAACC,GAAD,OAAO,EAAKJ,MAAQI,GAAGC,aAAc,EAAK5B,MAAMa,QAAQC,OACjF,uD,uDAKF,IACDH,EAAUkB,KAAKnB,MAAfC,OACL,OACI,mCACGA,EAASkB,KAAKJ,mBAAqBI,KAAKjB,qB,GAjD9BkB,aCkEVC,E,4MA9DbrB,MAAQ,CACNsB,QAAU,CACR,CAAClB,KAAO,QACR,CAACA,KAAO,OACR,CAACA,KAAO,eAEVT,QAAU,I,EAIZE,aAAc,SAACc,GACd,EAAKF,SAAS,CAACd,QAAUgB,EAAEY,OAAO7B,S,EAInCF,UAAY,SAACmB,GACXA,EAAEC,iBACF,IAAIU,EAAU,EAAKtB,MAAMsB,QACrB3B,EAAU,EAAKK,MAAML,QACrBA,IACF2B,EAAQE,KAAK,CAACpB,KAAKT,IACnB,EAAKc,SAAS,CACda,UACA3B,QAAQ,O,EAOZY,aAAe,SAACC,GACd,IAAIc,EAAU,EAAKtB,MAAMsB,QACzBA,EAAQG,OAAOjB,EAAQ,GACvB,EAAKC,SAAS,CAACa,a,EAIjBR,WAAY,SAACN,EAAOd,GAClB,IAAI4B,EAAU,EAAKtB,MAAMsB,QACZA,EAAQd,GACf,KAAWd,EACjB,EAAKe,SAAS,CAACa,a,uDAGP,IAAD,OAEDI,EADYP,KAAKnB,MAAhBsB,QACoBK,KAAI,SAACC,EAASpB,GACvC,OAAO,cAAC,EAAD,CAAaL,QAASyB,EAAoBpB,MAAOA,EAAOD,aAAc,EAAKA,aAAcO,WAAa,EAAKA,YAAxEN,MAE5C,OACE,0BAASqB,UAAW,MAApB,UAEE,4CACA,cAAC,EAAD,CAAYlC,QAASwB,KAAKnB,MAAML,QAASE,aAAcsB,KAAKtB,aAAcL,UAAW2B,KAAK3B,YAC1F,6BAAK2B,KAAKnB,MAAMsB,QAAQQ,OAAS,EAAIJ,EAAa,8D,GAxDxCN,aCQHW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.90838f5f.chunk.js","sourcesContent":["import React from 'react' ;\r\n\r\nconst CourseForm = (props) =>{ \r\n    return (\r\n        <form onSubmit={props.addCourse}>\r\n            <input type='text' value={props.current} onChange={props.updateCourse} placeholder='Enter Your Course'/>\r\n            <button>Add Course</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CourseForm ;\r\n","import React ,  { Component } from 'react';\r\n\r\nclass CourseList extends Component  { \r\n\r\n    state ={ \r\n        isEdit : false\r\n    }\r\n\r\n    renderCourse = () => {         \r\n        return (\r\n            <li>\r\n                <span> {this.props.details.name}</span>\r\n                <button onClick={()=> this.toggleState()}>Edit Course</button>\r\n                <button onClick={()=> this.props.deleteCourse(this.props.index)}>Delete Course</button>\r\n                \r\n            </li>\r\n        )\r\n    }\r\n\r\n    //toggleState\r\n    toggleState = () => { \r\n        let {isEdit} = this.state;\r\n        this.setState({\r\n            isEdit :!isEdit\r\n        })\r\n    }\r\n\r\n    updateCourseItem =(e) => { \r\n        e.preventDefault();\r\n        if (this.input.value) {\r\n            this.props.editCourse(this.props.index ,this.input.value );\r\n            this.toggleState();\r\n        } else { \r\n            this.input.placeholder = 'Must enter course in this field'\r\n        }\r\n      \r\n    }\r\n    //render update form\r\n    renderUpdateForm = () => {\r\n        return (\r\n            <form onSubmit ={this.updateCourseItem}> \r\n                <input type='text' ref ={(v) => this.input = v} defaultValue={this.props.details.name}/>\r\n                <button>Update Course</button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    render() { \r\n        let {isEdit} = this.state;\r\n        return (\r\n            <>   \r\n              {isEdit ? this.renderUpdateForm() : this.renderCourse()}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CourseList","import React , { Component } from 'react';\nimport CourseForm from './components/CourseForm';\nimport CourseList from './components/CourseList';\n\nclass App extends Component { \n\n  state = { \n    courses : [\n      {name : 'HTML'},\n      {name : 'CSS'},\n      {name : 'JAVASCRIPT'}\n    ] , \n    current : ''\n  }\n\n  //updateCourse \n  updateCourse =(e) =>{\n   this.setState({current : e.target.value})\n  }\n\n  //addCourse\n  addCourse = (e) =>{ \n    e.preventDefault();\n    let courses = this.state.courses;\n    let current = this.state.current;\n    if (current) { \n      courses.push({name:current})\n      this.setState({\n      courses ,\n      current:''\n      })\n    }\n    \n  }\n\n  //deleteCourse\n  deleteCourse = (index) => { \n    let courses = this.state.courses ; \n    courses.splice(index , 1);\n    this.setState({courses})\n  }\n\n  //editCourse\n  editCourse =(index ,value) => { \n    let courses = this.state.courses ; \n    let course = courses[index];\n    course['name'] = value ;\n    this.setState({courses})\n  }\n\n  render() { \n    const {courses} = this.state;\n    const courseList = courses.map((course , index)=>{\n      return <CourseList  details={course} key={index} index={index} deleteCourse={this.deleteCourse} editCourse ={this.editCourse}/>\n    })\n    return ( \n      <section className ='App'>\n\n        <h2>Add Course</h2>\n        <CourseForm current={this.state.current} updateCourse={this.updateCourse} addCourse={this.addCourse}/>\n        <ul>{this.state.courses.length > 0 ? courseList : <h2>All Courses Deleted</h2>}</ul>\n\n      </section>\n    );\n  }\n}\n\n\nexport default App ;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}